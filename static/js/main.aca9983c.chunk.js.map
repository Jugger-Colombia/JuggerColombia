{"version":3,"sources":["Components/jugger_logo.svg","Components/NavBar/navBar.jsx","Components/Banner/banner.jsx","Components/QQYellow/data.js","Components/QQYellow/QQYellow.jsx","Components/REGULARS/Modal/Modal.jsx","Components/Clubes/data.js","Components/Clubes/ModalGallery/ModalGallery.jsx","Components/Clubes/Clubes.jsx","Components/Footer/footer.jsx","VIEWSðŸ“º/HomeView/HomeView.jsx","ROUTESðŸ˜Š/RouteGroups/BussinesRoutes.jsx","ROUTESðŸ˜Š/RouteGroups/DummysRoutes.jsx","ROUTESðŸ˜Š/routes.js","ROUTESðŸ˜Š/ConditionalRoute.js","ROUTESðŸ˜Š/Router.js","JuggerApp.jsx","serviceWorker.js","index.js"],"names":["module","exports","NAVS","nosotros","clubes","NavBarItemsList","props","children","NavBarItem","href","name","defaultProps","NavBar","navs_list","Object","keys","map","i","key","useEffect","window","addEventListener","document","querySelector","classList","toggle","scrollY","className","src","logo","alt","Banner","id","process","INFO","jugger","juggerColombia","Card","cardPlace","bg1","bg2","style","background","backgroundSize","QQYellow","ref","useRef","useState","setCardPlace","lock","setLock","output","options","visible","setVisible","threshold","setThreshold","observer","IntersectionObserver","entry","isIntersecting","intersectionRatio","current","observe","useOnScreen","rootMargin","QueEsJugger","QueEsJuggerColombia","Modal","onclick","e","body","modal","target","add","remove","handleCloseModal","access","CLUBES","type","description","responsable","email","contact","socialmedia","iconsClass","facebook","twitter","instagram","youtube","linkedin","whatsapp","iconPicker","config","ClubsModalGallery","selectedClub","setSelectedClub","slides","club","onClick","handleClick","iconsSocial","social","card","positions","col","row","tumbItems","clubObj","console","log","Clubes","querySelectorAll","forEach","item","event","Footer","HomeView","path","DummysRoutes","routeName","authSuccess","authFail","to","pathname","RoutesList","BussinesRoutes","Config","ConditionalRoute","AuthSuccessComp","AuthFailCom","rest","isLogged","exact","render","undefined","padding","Router","Routes","route","fallback","JuggerApp","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aca9983c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jugger_logo.727bb696.svg\";","import React, { useEffect } from \"react\";\r\nimport logo from \"../jugger_logo.svg\"\r\nimport \"./navbar.css\";\r\n\r\nconst NAVS = {\r\n    nosotros: \"#nosotros\",\r\n    clubes: \"#clubes\",\r\n    /* entrenamientos: \"#entrenamientos\",\r\n    eventos: \"#eventos\",\r\n    contacto: \"#contacto\", */\r\n}\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    var navs = Object.keys(NAVS);\r\n    var navs_list = navs.map(\r\n        (i) => (<NavBarItem name={i} key={i} />)\r\n    )\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            var nav = document.querySelector(\"nav\");\r\n            nav.classList.toggle(\"sticky\", window.scrollY > 0);\r\n            /* console.log(window.scrollY); */\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <nav>\r\n                <div className=\"jugger_logo\">\r\n                    <figure >\r\n                        <img src={logo} alt=\"Jugger Colombia Logo\" />\r\n                    </figure>\r\n                    <a href=\"#banner\" className=\"logo\">JUGGER COLOMBIA</a>\r\n                </div>\r\n                <div ></div>{/* Separador */}\r\n                <NavBarItemsList >\r\n                    {navs_list}\r\n                </NavBarItemsList>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst NavBarItemsList = (props) => {\r\n\r\n    return (\r\n        <ul>\r\n            {props.children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst NavBarItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <a href={`#${props.name}`}> {props.name}</a>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nNavBarItem.defaultProps = {\r\n    name: \"HOLI\"\r\n}\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./banner.css\"\r\nconst Banner = () => {\r\n    return (\r\n        <section id=\"banner\" className=\"banner\">\r\n            <img src={`${process.env.PUBLIC_URL}/frontPage/REDBANNER.jpg`} alt=\"\" />\r\n            <p className=\"tag\">COLOMBIA</p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Banner;","const INFO = {\r\n    jugger:[\r\n        \"El jugger es un deporte de contacto mixto originado en Alemania alrededor de 1993, que mezcla elementos de esgrima con elementos del rugby en un juego de alta intensidad por equipos.\",\r\n\r\n        \"Consiste en dos equipos que se encuentran en el campo de juego (un octÃ¡gono de 40 x 20 mts) y luchan por el control del jugg (balÃ³n de juego) para marcar puntos en el mal (porterÃ­a) contrarios. Al finalizar el partido, el equipo con mÃ¡s puntos gana.\",\r\n\r\n        \"Cada equipo cuenta con 4 pompfer (combatientes) y un qwik (corredor). Los corredores son los Ãºnicos que pueden tomar el balÃ³n de juego y marcar puntos, y se enfrentan entre sÃ­ con reglas que recuerdan al rugby. Mientras tanto, lo combatientes se enfrentan entre ellos con reglas que recuerdan a la esgrima (y elementos creados para el deporte con las necesarias reglas de seguridad) para abrir campo a su corredor: cuando un jugador es impactado queda inactivo dentro del campo de juego por un tiempo determinado antes de volver a incorporarse al juego.\",\r\n\r\n        \"De esta manera, a muy grandes rasgos, se desarrolla un partido de jugger, que por sus caracterÃ­sticas se convierte en un deporte explosivo donde hay pocas oportunidades para caminar o trotar ya que todo el tiempo debes correr a mÃ¡xima velocidad, exigiendo tanto una adecuada preparaciÃ³n fÃ­sica como una comunicaciÃ³n en equipo asertiva.\",\r\n\r\n        \"Teniendo en cuenta la naturaleza mixta del deporte, es una plataforma que en su misma esencia propende por la eliminaciÃ³n de barreras sociales basadas en la diferenciaciÃ³n negativa de gÃ©neros, asÃ­ como tambiÃ©n inculca un gran sentido de la honestidad y la responsabilidad con el otro.\"\r\n    ],\r\n    juggerColombia:[\r\n        \"Jugger Colombia comenzÃ³ con dos amigos apasionados que encontraron este deporte alternativo con raÃ­ces alemanas y decidieron que serÃ­a genial practicarlo en Colombia: un deporte de contacto donde mujeres y hombres pueden competir en equipos mixtos era una idea tentadora ya que Colombia es conocida por sus problemas sociales, y especialmente los relacionados con la discriminaciÃ³n de gÃ©nero. Aunque el deporte se introdujo en 2011 y comenzÃ³ a practicar en BogotÃ¡ desde entonces, fue en 2015 cuando se fundaron los primeros equipos oficiales, por lo que la organizaciÃ³n del deporte realmente comenzÃ³.\",\r\n\r\n        \"A lo largo de estos cinco aÃ±os, Jugger Colombia ha sido la plataforma de apoyo administrativo que ayuda al crecimiento y desarrollo del deporte: desde la traducciÃ³n del reglamento alemÃ¡n de jugger hasta los procedimientos legales para tener acceso a canchas sintÃ©ticas y otros recursos gubernamentales, Jugger Colombia estÃ¡ enfocado en facilitar la introducciÃ³n a cualquiera que desee practicar el deporte, de modo que solo tenga que concentrarse en disfrutar y aprender los valores del deporte.\"\r\n    ]\r\n}\r\n\r\nexport default INFO;","import React, { useEffect, useRef, useState } from 'react';\r\nimport INFO from './data';\r\n\r\nimport './QQYellow.css'\r\nimport './card.css';\r\n\r\n\r\n\r\n\r\n\r\nconst QQYellow = () => {\r\n    const ref = useRef();\r\n\r\n    const [cardPlace, setCardPlace] = useState('left');\r\n    const [lock, setLock] = useState(false);\r\n    const output = useOnScreen(ref, { rootMargin: \"-20%\" });\r\n\r\n    const QueEsJugger = INFO['jugger'].map(i => <p key={`jugger${i}`}>{i}</p>);\r\n    const QueEsJuggerColombia = INFO['juggerColombia'].map(i => <p key={`juggerColombia${i}`}>{i}</p>);\r\n\r\n\r\n    useEffect(() => {\r\n        const { visible } = output;\r\n        if (visible) {\r\n            if (!lock) {\r\n                setCardPlace(cardPlace === 'left' ? 'right' : 'left')\r\n                setLock(true);\r\n            }\r\n        } else {\r\n            setLock(false)\r\n        }\r\n    }, [ref, output, cardPlace, lock])\r\n\r\n\r\n    return (\r\n        <section id=\"nosotros\" className=\"stickyContainer\" >\r\n            <div className=\"sticky\">\r\n                <div className={`text-container ${cardPlace}`} >\r\n                    <div className=\"text text-right\">\r\n                        {QueEsJugger}\r\n                    </div>\r\n                    <div className=\"text text-left\">\r\n                        {QueEsJuggerColombia}\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <Card cardPlace={cardPlace} />\r\n                </div>\r\n            </div>\r\n            <span ref={ref}></span>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nconst Card = (props) => {\r\n    const { cardPlace = \"\" } = props\r\n    const bg1 = `url(${process.env.PUBLIC_URL}/frontPage/YELLOW1FLT.png)`;\r\n    const bg2 = `url(${process.env.PUBLIC_URL}/frontPage/YELLOW2FLT.png)`;\r\n\r\n\r\n    return (\r\n        <div className={`card ${cardPlace}`}>\r\n            <div className=\"face front\" style={{ background: bg1, backgroundSize: 'cover' }}>\r\n                <h2>Â¿ Que es Jugger ?</h2>\r\n            </div>\r\n            <div className=\"face back\" style={{ background: bg2, backgroundSize: 'cover' }}>\r\n                <h2>Â¿ Que es Jugger Colombia ?</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction useOnScreen(ref, options) {\r\n    const [visible, setVisible] = useState(false);\r\n    const [threshold, setThreshold] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                setVisible(entry.isIntersecting);\r\n                setThreshold(entry.intersectionRatio);\r\n            }, options\r\n        );\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n        }\r\n        /*  return () =>{\r\n             if(ref.current){\r\n                 observer.unobserve(ref.current);\r\n             }\r\n         } */\r\n    }, [ref, options])\r\n\r\n    return { ref, visible, threshold }\r\n}\r\n\r\nexport default QQYellow;","import React, { useEffect } from 'react';\r\nimport './modal-gallery.css';\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    const handleCloseModal = (e) => {\r\n        const body = document.querySelector('body');\r\n        const modal = document.querySelector('.modal');\r\n\r\n        if (e.target == modal) {\r\n            modal.classList.add('disable');\r\n            body.classList.remove('modal-open');\r\n            /* console.log(e.target); */\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.onclick = (e) => handleCloseModal(e);\r\n    }, [])\r\n    return (\r\n        <div\r\n            /* className=\"modal \" */\r\n            className=\"modal disable\"\r\n        /*  onClick={() => handleCloseModal()} */\r\n        >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","const access = [\r\n    \"lycaon\",\r\n    \"quynza\"\r\n]\r\n\r\nconst CLUBES = {\r\n    \"lycaon\": {\r\n        name: \"Lycaon Pictus \",\r\n        type: \"Jugger Club\",\r\n        logo: `${process.env.PUBLIC_URL}/logos/Lycaon.png`,\r\n        description: \" Somos la Manada mÃ¡s competitiva de Jugger, si Quieres Conoser tus limites y sentir que cada entrenamiento es un Desafio te invitamos a unirtenos para Buscar  Juntos la Victoria.\",\r\n        responsable: \"Juan Pablo Bedoya \",\r\n        email: \"lycaonpictusjuggerclub@jugger.co\",\r\n        contact: \"322-3662053\",\r\n        socialmedia: [\r\n            { type: \"facebook\", contact: \"http://www.facebook.com/LycaonPictusJuggerTeam\" },\r\n            { type: \"instagram\", contact: \"http://www.instagram.com/lycaonpictus_\" },\r\n\r\n        ]\r\n    },\r\n\r\n    \"titans\": {\r\n        name: \"Titans\",\r\n        type: \"Jugger Club\",\r\n        logo: `${process.env.PUBLIC_URL}/logos/Titans.png`,\r\n        description: \"Titans Jugger Club es actualmente el club mÃ¡s joven dentro de la comunidad, destacando su disciplina, uniÃ³n y organizaciÃ³n, cuenta asÃ­ con tres equipos competitivos y solo estÃ¡ a la espera de que seas parte de esta gran familia. \",\r\n        responsable: \"Mateo Avilan\",\r\n        email: \"titansjuggerclub@gmail.com\",\r\n        contact: [\"321-9027905\", \" 300-4147645\"],\r\n        socialmedia: [\r\n            { type: \"facebook\", contact: \"http://www.facebook.com/Titansjuggerclub\" },\r\n            { type: \"tiktok\", contact: \"https://vm.tiktok.com/ZSPFRBvj/\" },\r\n            { type: \"instagram\", contact: \"http://www.instagram.com/titansjuggerclub\" },\r\n        ]\r\n\r\n    },\r\n    \"connelle\": {\r\n        name: \"Connelle\",\r\n        type: \"Jugger Club\",\r\n        logo: `${process.env.PUBLIC_URL}/logos/Collapse.jpg`,\r\n        description: \" \",\r\n        responsable: \"SebastiÃ¡n Mosquera\",\r\n        email: \"lycaonpictus@gmail.com\",\r\n        contact: \" 000-0000000 000-0000000\",\r\n        socialmedia: [\r\n\r\n        ]\r\n\r\n    },\r\n    \"raiders\": {\r\n        name: \"Raiders\",\r\n        type: \"Jugger Club\",\r\n        logo: `${process.env.PUBLIC_URL}/logos/Raiders.svg`,\r\n        description: \" \",\r\n        responsable: \"SebastiÃ¡n Mosquera\",\r\n        email: \"lycaonpictus@gmail.com\",\r\n        contact: \" 000-0000000 000-0000000\",\r\n        socialmedia: [\r\n\r\n        ]\r\n\r\n    },\r\n\r\n    \"quynza\": {\r\n        name: \"Quynza\",\r\n        type: \"Jugger Club\",\r\n        logo: `${process.env.PUBLIC_URL}/logos/Quynza.svg`,\r\n        description: \"SueÃ±a en grande, corre como nunca, deja todo de ti en el campo, veras que los obstÃ¡culos serÃ¡n cada vez mÃ¡s pequeÃ±os y la victoria colosal; el poder de ser quynza se siente en la mente, cuerpo y corazÃ³n; somos Quynza jugger club y la aventura empieza en 3,2,1 Â¡Jugger!\",\r\n        responsable: \"Jenny Gil \",\r\n        email: \"quynzajuggerclub@jugger.co\",\r\n        contact: \"312-3918610\",\r\n        socialmedia: [\r\n\r\n        ]\r\n    },\r\n}\r\n\r\nexport { CLUBES, access };","import React, { useState } from 'react';\r\n\r\nimport { CLUBES, access } from '../data';\r\n\r\nimport './clubes-modal-gallery.css'\r\n\r\n\r\nfunction ClubsModalGallery(props) {\r\n    const { selectedClub, setSelectedClub } = props;\r\n    const handleClick = (e, name) => {\r\n        setSelectedClub(name)\r\n    }\r\n\r\n    /* const slides = Object.keys(CLUBES).map((club, i) => { */\r\n    const slides = access.map((club, i) => {\r\n        const { name, logo } = CLUBES[club];\r\n        return (\r\n            <img\r\n                onClick={(e) => handleClick(e, club)}\r\n                key={`${name}${i}`}\r\n                className={\"club-card\"}\r\n                src={logo} alt=\"\"\r\n            />\r\n\r\n        )\r\n    })\r\n\r\n    const card = (club) => {\r\n        const { name, type, logo, description, responsable, email, contact, socialmedia } = CLUBES[club];\r\n        const iconsSocial = socialmedia.map((social, i) => iconPicker({ ...social, i }));\r\n\r\n        return (\r\n            <section className=\"gallery-main-card\">\r\n                <img className={\"main-card\"} src={logo} alt=\"\" />\r\n                <div className=\"card-content\">\r\n                    <div className=\"tittle\">\r\n                        <h1 className=\"tittle-name\">  {name}</h1>\r\n                        <h3 className=\"tittle-info\">  {type}</h3>\r\n                    </div>\r\n                    <p>{description}</p>\r\n                    <div className=\"contact\">\r\n                        <h3 ><span>{\"Responsable :\"}</span> {responsable}</h3>\r\n                        <h3 ><span>{\"email :\"}</span> {email}</h3>\r\n                        <h3 ><span>{\"contac :\"}</span> {contact} </h3>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"social-content\">\r\n                    {iconsSocial}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"clubes-modal-gallery\">\r\n            {card(selectedClub)}\r\n\r\n            <div className=\"gallery-controls\">\r\n                <h3>{/* â—€ */}</h3>\r\n                <h1>{CLUBES[selectedClub].name}</h1>\r\n                <h3>{/* â–¶ */}</h3>\r\n            </div>\r\n            <div className=\"gallery-tumb-line\">\r\n                <div className=\"gallery-tumb-line-logos\">\r\n                    {slides}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst iconsClass = {\r\n    facebook: \"flaticon-001-facebook\",\r\n    twitter: \"flaticon-002-twitter\",\r\n    instagram: \"flaticon-011-instagram\",\r\n    youtube: \"flaticon-008-youtube\",\r\n    linkedin: \"flaticon-010-linkedin\",\r\n    whatsapp: \"flaticon-003-whatsapp\"\r\n}\r\n\r\nconst iconPicker = (config) => {\r\n    const { type, i, contact } = config;\r\n    const component = <a key={`icon-${i}`} className={\"icon\"} href={contact} > <i className={iconsClass[type]}></i></a >\r\n    return component;\r\n}\r\n\r\n\r\n\r\nexport default ClubsModalGallery;","import React, { useState, useEffect } from 'react';\r\nimport Modal from '../REGULARS/Modal/Modal';\r\nimport ClubessModalGallery from './ModalGallery/ModalGallery';\r\n\r\nimport { CLUBES, access } from './data';\r\n\r\n\r\nimport './Clubes.css';\r\nimport './diamond-gallery.css';\r\n\r\nconst Clubes = () => {\r\n    const [selectedClub, setSelectedClub] = useState(\"lycaon\");\r\n\r\n    useEffect(() => {\r\n        const diamondItems = document.querySelectorAll('.diamond-item');\r\n        diamondItems.forEach((item) => {\r\n            console.log(item);\r\n            item.addEventListener(\"mouseenter\", (event) => {\r\n                console.log(\"enter\");\r\n            });\r\n        })\r\n    }, [])\r\n    return (\r\n        <section\r\n            id=\"clubes\"\r\n            className='clubes'\r\n        >\r\n            <h1 className='heading-clubes'>Clubes Activos</h1>\r\n\r\n            <div className=\"diamond-grid\">\r\n                {tumbItems({ selectedClub, setSelectedClub })}\r\n            </div>\r\n\r\n            <Modal>\r\n                <ClubessModalGallery {...{ selectedClub, setSelectedClub }} />\r\n            </Modal>\r\n        </section>\r\n    )\r\n}\r\nconst positions = [\r\n    /* { col: 1, row: 1 },\r\n    { col: 3, row: 1 },\r\n    { col: 5, row: 1 }, */\r\n    { col: 2, row: 2 },\r\n    { col: 4, row: 2 },\r\n    /*{col:7 ,row:1},\r\n            {col:6 ,row:2},\r\n            {col: 3,row:3},\r\n            {col: 1,row:3},\r\n            {col: 5,row:3},\r\n            {col: 7,row:3}, */\r\n]\r\nconst tumbItems = ({ selectedClub, setSelectedClub }) => {\r\n\r\n    const handleClick = (e, clubObj) => {\r\n        const body = document.querySelector('body');\r\n        const modal = document.querySelector('.modal');\r\n        modal.classList.remove('disable');\r\n        body.classList.add('modal-open');\r\n        setSelectedClub(clubObj.club)\r\n        console.log(e.target, clubObj);\r\n    }\r\n\r\n\r\n    /* const tumbItems = Object.keys(CLUBES).map((club, i) => { */\r\n    const tumbItems = access.map((club, i) => {\r\n        const { name, logo } = CLUBES[club];\r\n        return (\r\n            <div\r\n                className=\"item-shadow\"\r\n                onClick={e => handleClick(e, { name: name, club })}\r\n                style={{ \"--row\": positions[i].row, \"--col\": positions[i].col }}\r\n                key={`${name}${i}`}\r\n            >\r\n                <div className=\"diamond-item\" >\r\n                    {/*  {club.name} */}\r\n                    <img\r\n                        className=\"diamond-item-logo\"\r\n                        src={logo} alt=\"\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        tumbItems\r\n    )\r\n}\r\n\r\n\r\nexport default Clubes;","import React from 'react';\r\nimport logo from \"../jugger_logo.svg\"\r\nimport \"./footer.css\";\r\n\r\nconst version = \"av0.0.1\"\r\n\r\nconst instagram = \"https://www.instagram.com/jugger.co/\";\r\nconst facebook = \"https://www.facebook.com/JuggerColombia\";\r\nconst twitter = \"https://twitter.com/JuggerColombia?s=09\";\r\nconst juggerCOEmail = \"email: info@jugger.co\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <section className=\"footer\">\r\n            <div className=\"down-index\">\r\n                <section >\r\n                    <a href={facebook} className=\"icon\"><i className=\"flaticon-001-facebook\"></i>@ Juggercolombia</a>\r\n                    <a href={twitter} className=\"icon\"><i className=\"flaticon-002-twitter\"></i>@ Juggercolombia</a>\r\n                    <a href={instagram} className=\"icon\"><i className=\"flaticon-011-instagram\"></i> @ Jugger.co</a>\r\n                </section>\r\n                <section>\r\n                    {/*   <h5 >FAQ</h5>\r\n                    <h5 >Reglamento & Otros Documentos </h5>\r\n                    <h5 >Politicas de Privacidad</h5> */}\r\n                </section>\r\n                <section>\r\n                    <h4 >JUGGER COLOMBIA</h4>\r\n                    <h6 >DirecciÃ³n: Carrera 52 # 74-22</h6>\r\n                    <h6 >BogotÃ¡ D.C - Colombia</h6>\r\n                    <h6 >TelÃ©fonos: 305 3680606 - 305 7128436</h6>\r\n                    <h6 >{juggerCOEmail}</h6>\r\n                </section>\r\n                <section>\r\n                    <div className=\"jugger_logo\">\r\n                        <figure >\r\n                            <img src={logo} alt=\"Jugger Colombia Logo\" />\r\n                        </figure>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n            <h5 className=\"rights\">\r\n                {`Jugger Colombia 2020 - Todos los derechos reservados / Sitio diseÃ±ador por: MajoAlvarez-DiseÃ±o y desarrollado por: Marca de Moggy -${version}`}\r\n            </h5>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n/**\r\n *\r\n *  <section className=\"header-icons-container\">\r\n\r\n        <div className=\"icons\">\r\n            <a href=\"#test\"><span className=\"flaticon-001-facebook\"></span></a>\r\n            <a href=\"#test\"><span className=\"flaticon-002-twitter\"></span></a>\r\n            <a href=\"#test\"><span className=\"flaticon-011-instagram\"></span></a>\r\n            <a href=\"#test\"><span className=\"flaticon-008-youtube\"></span></a>\r\n            <a href=\"#test\"><span className=\"flaticon-010-linkedin\"></span></a>\r\n\r\n            <a href=\"#test\"><i className=\"flaticon-001-facebook\"></i></a>\r\n            <a href=\"#test\"><i className=\"flaticon-002-twitter\"></i></a>\r\n            <a href=\"#test\"><i className=\"flaticon-011-instagram\"></i></a>\r\n            <a href=\"#test\"><i className=\"flaticon-008-youtube\"></i></a>\r\n        </div>\r\n    </section>\r\n *\r\n *\r\n *\r\n */","import React from 'react';\r\nimport NavBar from '../../Components/NavBar/navBar';\r\nimport Banner from '../../Components/Banner/banner';\r\nimport QQYellow from '../../Components/QQYellow/QQYellow';\r\nimport Clubes from '../../Components/Clubes/Clubes';\r\nimport Footer from '../../Components/Footer/footer';\r\n\r\n\r\nfunction HomeView() {\r\n    return (\r\n        <div className=\"App\">\r\n            <NavBar />\r\n\r\n            <Banner />\r\n            <QQYellow />\r\n            <Clubes />\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport HomeView from '../../VIEWSðŸ“º/HomeView/HomeView';\r\n\r\nconst path = '/JuggerColombia';\r\n\r\nconst DummysRoutes = {\r\n  [`${path}/`]: {\r\n    routeName: 'View PDF Validator ',\r\n    authSuccess: () => (\r\n      <>\r\n        <HomeView />\r\n      </>\r\n    ),\r\n    authFail: () => (\r\n      <>\r\n        <Redirect to={{ pathname: `${path}/` }} />\r\n      </>\r\n    ),\r\n  },\r\n  /*\r\n    [`${path}/spinner`]: {\r\n        routeName: \"Spinners Samples\",\r\n        authSuccess: () => (\r\n            <>\r\n                <Spinner text={'SPIN Route Auth'}></Spinner>\r\n                <SettingsButton></SettingsButton>\r\n            </>\r\n        ),\r\n        authFail: () => (<Spinner text={'SPIN Route NO Auth'}></Spinner>)\r\n    } */\r\n};\r\n\r\nexport default DummysRoutes;\r\n","import React from 'react';\r\n\r\nvar path = 'JuggerColombia';\r\n\r\nconst DummysRoutes = {\r\n\r\n    /* [`${path}/validatortest`]: {\r\n        routeName: \"Dashboard\",\r\n        authSuccess: () => (\r\n            <>\r\n              \r\n            </>\r\n        ),\r\n        authFail: () => (\r\n            <>\r\n              \r\n            </>\r\n        )\r\n    }, */\r\n    /*[`${path}/spinner`]: {\r\n        routeName: \"Spinners Samples\",\r\n        authSuccess: () => (\r\n            <>\r\n                <Spinner text={'SPIN Route Auth'}></Spinner>\r\n                <SettingsButton></SettingsButton>\r\n            </>\r\n        ),\r\n        authFail: () => (<Spinner text={'SPIN Route NO Auth'}></Spinner>)\r\n    } */\r\n}\r\n\r\nexport default DummysRoutes;","import React, { lazy } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport BussinesRoutes from \"./RouteGroups/BussinesRoutes\";\r\n/* import AdminRoutes from \"./routeGroups/AdminRoutes\"; */\r\nimport DummysRoutes from \"./RouteGroups/DummysRoutes\";\r\n\r\n\r\nexport var path = '/JuggerColombia'\r\n\r\nexport const RoutesList = [\r\n\r\n    /*   `${path}/validator` */\r\n    ...Object.keys(BussinesRoutes),\r\n    ...Object.keys(DummysRoutes),\r\n    `${path}`,\r\n    ``\r\n];\r\n\r\nexport const Config = {\r\n    [``]: {\r\n        /*  [`${path}`]: { */\r\n        routeName: \"Defaul\",\r\n        authSuccess: () => (<Redirect to={{ pathname: `${path}/` }} />),\r\n        authFail: () => (<Redirect to={{ pathname: `${path}/` }} />),\r\n    },\r\n    [`${path}`]: {\r\n        /*  [`${path}`]: { */\r\n        routeName: \"Defaul\",\r\n        authSuccess: () => (<Redirect to={{ pathname: `${path}/` }} />),\r\n        authFail: () => (<Redirect to={{ pathname: `${path}/` }} />),\r\n    },\r\n    /*\r\n   [`${path}/home`]: {\r\n       routeName: \"Home\",\r\n       authSuccess: AppHomeWithSideBar,\r\n       //authSuccess: (props) => PermissionBuilder(AppHomeWithSideBar)(props),\r\n       authFail: () => (<Redirect to={{ pathname: \"/login\" }} />),\r\n   },\r\n  \r\n   ...AdminRoutes,\r\n   */\r\n    ...DummysRoutes,\r\n    ...BussinesRoutes\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\nfunction ConditionalRoute({ authSuccess: AuthSuccessComp, authFail: AuthFailCom, ...rest }) {\r\n    const [isLogged, setIsLogged] = useState(true); ///Validacion\r\n\r\n    return (\r\n        <Route\r\n            exact\r\n            render={(props) =>\r\n                /* verify integrity of the auth param */\r\n                (isLogged !== undefined ? (\r\n                    <>\r\n                        {isLogged ? (\r\n\r\n                            <AuthSuccessComp {...props} {...rest} {...{ authFail: AuthFailCom }} />\r\n                        ) : (\r\n                                /* auth fail */\r\n                                <AuthFailCom />\r\n                            )}\r\n                    </>\r\n                ) : (\r\n                        // loading\r\n                        <>\r\n                            <h3 style={{ padding: '5em' }}>LOADING CREDENTIALS</h3>\r\n                        </>\r\n                    ))}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ConditionalRoute;\r\n","import React, { Suspense, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport { Config, RoutesList } from \"./routes\";\r\nimport ConditionalRoute from \"./ConditionalRoute\";\r\n\r\n\r\nfunction Router() {\r\n\r\n\tconst Routes = RoutesList.map(route => (\r\n\t\t// eslint-disable-next-line react/jsx-filename-extension\r\n\t\t<ConditionalRoute key={route} path={route} {...Config[route]} />\r\n\t));\r\n\r\n\tconst fallback = <h2>LOADING SPINER</h2>\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Suspense fallback={fallback}>\r\n\t\t\t\t<Switch>{Routes}</Switch>\r\n\t\t\t</Suspense>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\nimport NavBar from './Components/NavBar/navBar';\nimport Banner from './Components/Banner/banner';\nimport QQYellow from './Components/QQYellow/QQYellow';\nimport Clubes from './Components/Clubes/Clubes';\nimport Footer from './Components/Footer/footer';\nimport Router from './ROUTESðŸ˜Š/Router';\n\nimport './JuggerApp.css';\nimport './SocialMedia/font/flaticon.css';\n\nfunction JuggerApp() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router></Router>\n\n\t\t\t{/*  <NavBar/>\n\n      <Banner/>\n      <QQYellow/>\n      <Clubes/>\n\n      <Footer/> */}\n\t\t</div>\n\t);\n}\n\nexport default JuggerApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JuggerApp from './JuggerApp';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <JuggerApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}